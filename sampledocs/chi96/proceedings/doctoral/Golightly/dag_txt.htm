<html>
<Head>
<title>Harnessing the Interface for Domain Learning</title>
</head>
<body>
<TABLE WIDTH="100%" >
<TR>
<TD valign="top"><IMG SRC="./../../graphics/logo_a.JPG" ALT="Logo A" HEIGHT=25 WIDTH=256><A HREF="../../index.htm"><IMG SRC="./../../graphics/home.JPG" ALT="Home" BORDER=0 HEIGHT=25 WIDTH=98></A><BR><IMG SRC="./../../graphics/logo_b.JPG" ALT="Logo B" HEIGHT=25 WIDTH=256><A HREF="../../indexes.htm"><IMG SRC="./../../graphics/index.JPG" ALT="Index" BORDER=0 HEIGHT=25 WIDTH=98></A><BR><IMG SRC="./../../graphics/logo_c.JPG" ALT="Logo C" HEIGHT=24 WIDTH=256><A HREF="../../acmcopy.htm"><IMG SRC="./../../graphics/acmcopy.JPG" ALT="ACM Copy" BORDER=0 HEIGHT=24 WIDTH=98></A>
<p><IMG SRC="./../../graphics/doctoral.JPG" ALT="Doctoral" HEIGHT=35 WIDTH=249><A HREF="../../doctoral.htm"><IMG SRC="./../../graphics/toc.JPG" ALT="Table of Contents" BORDER=0 HEIGHT=35 WIDTH=105></A>
</TD>
</TR>
</TABLE>
<HR width="100%">
<center>
<H1>Harnessing the Interface for Domain Learning</H1>
<H3>David Golightly</H3>
Department of Psychology,
University of Nottingham,
University Park,
Nottingham, NG7 2RD
Tel: +44-115-9515151 x8349
</center><p>
<br>
<br>

<H2>ABSTRACT</H2>
<p>
Making an interface less direct changes how the user learns about the particular domain they are acting upon. Different interfaces cause the user to interact in different ways. This affects how they build up information about the domain they are working in. The counterintuitive finding is that less easy to use interfaces can be beneficial to the domain learning process. Less direct interfaces cause the user to build a more verbalisable and transferable body of knowledge about the domain. The research outlined here is examining this learning process to draw conclusions about where the effect can be most usefully employed.
</p>

<H2>Keywords</H2> 
Direct manipulation, 8-puzzle, cognitive cost, learning, problem-solving
<br>
<HR>
<br>
<br>
<h2>INTRODUCTION</h2>
The rationale behind direct manipulation is to allow rapid learning of functionality for beginners and rapid action for expert users. The hope is also to reduce anxiety while interaction occurs [5]. When the disparity between the desired action of the user and the available actions at the interface is more apparent   the directness of the interaction is lost. This, in turn leads to greater mental effort in planning the operations necessary to achieve a goal [2].
<p>
From this, it is concluded that reducing directness is detrimental to user performance. The more complex the control of the interface is the more problem solving is required to use it. If, as empirical evidence and theory suggests [7], conventional problem solving imposes a heavy cognitive load then this may interfere with learning. By making the interface easier to use (i.e. more 'transparent') the cognitive load needed to operate the device is reduced and more resources freed for efficient learning of the interaction. An increasing body of work suggests that interface guidelines such as those highlighted by direct manipulation may be inappropriate in some situations [3,6]. </p>
<p>
The work outlined here shows that reducing the ease of use of an interface has a beneficial effect on an interaction. By taking a simple task (the 8-puzzle) it examines the effect of altering the interface used to manipulate the puzzle. The work of Svendsen and O'Hara & Payne has suggested that reducing directness supports problem solving performance. The aim of the work presented here is a fuller understanding of how this affects learning.</p>
<h2>INITIAL STUDY</h2>
<center>
<img src="dag_fg1.GIF" alt="Figure 1">
<br>
Figure 1<br>
</center> 
Users are given one of two versions of the 8-puzzle. The first is the indirect manipulation (IM) interface (see figure 1). This requires users to press on adjacent buttons to move a particular tile of the puzzle. The other interface is the direct manipulation (DM) interface which only requires users to click on the tile they wish to move on the puzzle itself. The eight buttons in the middle are removed for these users. The necessary finishing configuration is shown on the right hand side of the display.
<p>
To explore the learning differences between the two interface styles users are given a transfer task. This takes the form of having a different finishing configuration to complete.</p>
<p>
Performance measures are taken for the transfer task. The time taken for the DM group to perform a single move of a tile is quicker than for the IM group. The IM group takes less moves to reach a maximum score. Also the variation of times taken for a move is much greater for the IM group than for the DM group. Both groups show equal performance in the percentage of the puzzle they managed to complete.</p>
<p>
The different interfaces cause the user to problem solve the transfer puzzle in a different ways. The DM group operated more efficiently in the act of moving a tile. This can be taken as the unit task level of analysis[1]. The IM interface forces poorer performance at the unit task level indicated by the longer times to make a move. But this difference at the unit task level is an insufficient measure of performance when examining how users achieve the goal. The IM interface allows them to reach a maximum score in less moves than the DM group.</p>
<p>
A more difficult interface at the unit task level invokes a higher cognitive cost [3]. This in turn leads to different problem solving strategies being employed in the initial learning phase.  Performance differences did not exist in the initial phase of the test and the fact that they do exist in the transfer stage indicates that the two groups have learned to different standards. The two problem solving strategies result in users building different representations of the domain worked upon (in this case the 8-puzzle).</p>
<p>
The increased variability of move time for the IM group in the transfer task suggest a 'look-ahead' problem solving style. Users are taking longer over key moves and then carrying out a series of rapid actions. The DM group employ a 'trial-and-error' style of problem solving. Actions are frequent and at a constant rate suggesting little planning of future actions. The richer problem-solving style of the IM group accounts for the reduced number of moves needed to reach a maximum score.</p>
<h2>CURRENT RESEARCH</h2>
The above study is a basis for exploration into learning differences caused by interface styles. Two key questions arise.
	병hat are the learning differences that occur?
	병here can these differences be best employed to benefit user performance?
In order to investigate the first question a more in-depth version of the previous study has been implemented. Subjects are given an extended learning period with one of the two interface styles above but are then given a range of different transfer tasks.
<p>
The increased body of data allows a sequential analysis to identify correlates between long times to make a move and the particular move taken to see exactly what sort of problem-solving style a user is employing. This will more clearly quantify the look-ahead or trial-and-error problem solving style a particular interface is promoting.</p>
<p>
The extra planning invoked by the IM interface may result in an explicit learning style . This results in a representation that draws out more abstract relations from an environment. It allows the representation to be transferred to other tasks. The DM interface leads to an implicit style of learning. This is less transferable but maybe more durable[4].</p>
<p>
Performance differences for the two groups on subsequent transfer tasks will be measured. As the similarity between the original task and the transfer tasks decreases it is possible to make judgements as to which knowledge type, implicit or explicit, has the priority as the result of a particular interface type.</p>
<p>
This is also examined by asking users to try and complete the original puzzle again 1 week later. The transfer set should be easiest for users who have a more explicit knowledge of the problem. However, it may be implicit knowledge that will be of use to help perform the task a week later.</p>
<h2>IMPLICATIONS</h2>
The results of this study will help clarify in exactly which situations a user will benefit from having the directness of the interface reduced. Direct manipulation as outlined by Shneiderman will still offer the greatest range of possibilities for both novice and expert use in many applications. But the evidence of this research should indicate
	병hich parts of these interfaces may prove most beneficial if presented in a less direct form
	병hich types of applications may be best presented in a less direct form as a whole.
If a less direct interface does support a richer understanding of the domain then it will lend itself to certain applications.</p>
<p>
In many applications domain competence is not an issue in their design. Subjective feelings of engagement with the interface are the central concern [2]. However, small subtasks within their design may benefit from having the user approach them with enhanced domain knowledge.</p>
<p>
A second type of application is one where domain knowledge is crucial. In such situations problem-solving performance takes a priority over the subjective experience of the user. Safety critical systems are the most obvious examples of such applications. For example, the ability of a user to make the correct decision through problem solving may take priority over executing that decision.</p>
<p>
A third category is that of educational software. The effects of manipulation can be employed to enhance how the learner develops and understands a particular educational domain.</p>
<p>
The effects of the interface on learning in the 8-puzzle domain will be used to draw up guidelines to outline how the phenomena can be best used in these three situations. By default, it will also give an insight into which situations a more direct manipulation style is the preferred choice.</p>
<br>
<br>
<h2>REFERENCES</h2>
<p>
1. Card, S.K., Moran, P.T. & Newell, A. 1983  <i> The Psychology of Human-Computer Interaction. </i> Hillsdale, NJ. Laurence Erlbaum Associates, inc. </p>
<p>
2. Norman, D.A. 1986  <i> Cognitive Engineering. in D.A. Norman & S.W. Draper User Centred System Design: New Perspectives in Human-Computer Interaction. </i> Hillsdale, NJ. Laurence Erlbaum Associates, inc. </p>
<p>
3. O'Hara, K & Payne, S.J. 1994  <i> Cost of Operation Affects Planfulness of Problem-Solving Behaviour. </i> School of Psychology, University of Wales, College of Cardiff. </p>
<p>
4. Reber, A.S. 1993  <i> Implicit Learning and Tacit knowledge: an Essay in the Cognitive Unconscious. </i> Oxford, Oxford University Press. </p>
<p>
5. Shneiderman, B. 1988  <i> We Can Design Better User Interfaces: A Review of Human-Computer Interaction Styles. </i> Ergonomics. 31(5): 699-710. </p>
<p>
6. Svendsen, G.B. 1991  <i> Influences of Interface Style on Problem Solving. </i> International Journal of Man-Machine Studies,  35: 379-397. </p>
<p>
7. Sweller, J. 1988  <i> Cognitive Load During Problem Solving: Effects on Learning. </i> Cognitive Science, 12: 257-285. </p>
<p>
<br>
<hr>
<br>
<H3> For more information on this research, please 
<i><a HREF="mailto:dag@psyc.nott.ac.uk">email me </A></i>

<address>
Harnessing the Interface for Domain Learning <BR>
dag@psyc.nott.ac.uk
</address>
</body>
</html> 
