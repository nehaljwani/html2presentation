<html>
<head>
<title>
Exploring the Unrealized Potential of Computer-Aided Drafting
</title>
</head>

<body>
<TABLE WIDTH="100%" >
<TR>
<TD valign="top"><IMG SRC="./../../graphics/logo_a.JPG" ALT="Logo A" HEIGHT=25 WIDTH=256><A HREF="../../index.htm"><IMG SRC="./../../graphics/home.JPG" ALT="Home" BORDER=0 HEIGHT=25 WIDTH=98></A><BR><IMG SRC="./../../graphics/logo_b.JPG" ALT="Logo B" HEIGHT=25 WIDTH=256><A HREF="../../indexes.htm"><IMG SRC="./../../graphics/index.JPG" ALT="Index" BORDER=0 HEIGHT=25 WIDTH=98></A><BR><IMG SRC="./../../graphics/logo_c.JPG" ALT="Logo C" HEIGHT=24 WIDTH=256><A HREF="../../acmcopy.htm"><IMG SRC="./../../graphics/acmcopy.JPG" ALT="ACM Copy" BORDER=0 HEIGHT=24 WIDTH=98></A>
<P><IMG SRC="./../../graphics/papers.JPG" ALT="papers" HEIGHT=35 WIDTH=249><A HREF="./../../papers.htm"><IMG SRC="./../../graphics/toc.JPG" ALT="Table of Contents" BORDER=0 HEIGHT=35 WIDTH=105></A>
</TD>
</TR>
</TABLE>
<HR width="100%">

<h1>Exploring the Unrealized Potential of Computer-Aided Drafting</h1>
<p>

<em>
<A HREF="http://www.contrib.andrew.cmu.edu/usr/suresh/index.html">Suresh K. Bhavnani*, </A>
<A HREF="http://www.cs.cmu.edu/afs/cs.cmu.edu/user/bej/www/bej-home.html">Bonnie E. John**</A>
</em>

<p>
<dl>
<dt><A HREF="http://www.arc.cmu.edu/">*Dept. of Architecture</A><br>
<dt><A HREF="http://www.cmu.edu/">Carnegie Mellon University</A><br>
<dt>Pittsburgh, PA 15213 USA<br>
<dt>+1 412 363 8308<br>
<dt><A HREF="mailto:suresh@andrew.cmu.edu">suresh@andrew.cmu.edu</A><br>
</dl>
<p>
<dl>
<dt>	<A HREF="http://www.cs.cmu.edu/">**Computer Science Department</A>, 
	<A HREF="http://www.psy.cmu.edu/">Psychology</A>, and 
	<a href="http://www.cs.cmu.edu/~hcii">HCI Institute</A><br>
<dt><A HREF="http://www.cmu.edu/">Carnegie Mellon University</A><br>
<dt>Pittsburgh, PA 15213 USA<br>
<dt>+1 412 268 7182<br>
<dt><A HREF="mailto:bej+@cs.cmu.edu">bej+@cs.cmu.edu</A><br>
</dl>
<p>
<hr>

<h2>ABSTRACT</h2>
Despite huge investments by vendors and users, CAD productivity remains disappointing. Our analysis of real-world CAD usage shows that even after many years of experience, users tend to use suboptimal strategies to perform complex CAD tasks. Additionally, some of these strategies have a marked resemblance to manual drafting techniques. Although this phenomenon has been previously reported, this paper explores explanations for its causes and persistence. We argue that the strategic knowledge to use CAD effectively is neither defined nor explicitly taught. In the absence of a well-formed strategy, users often develop a synthetic mental model of CAD containing a mixture of manual and CAD methods. As these suboptimal strategies do not necessarily prevent users from producing clean, accurate drawings, the inefficiencies tend to remain unrecognized and users have little motivation to develop better strategies. To reverse this situation we recommend that the strategic knowledge to use CAD effectively should be made explicit and provided early in training. We use our analysis to begin the process of making this strategic knowledge explicit. We conclude by discussing the ramifications of this research in training as well as in the development of future computer aids for drawing and design

<h3>Keywords</h3>
CAD, Task Decomposition, Learning.

<h2>INTRODUCTION</h2>
Productivity increases through the use of computers have been negligible or difficult to achieve in various application domains.  The huge investments in the computer revolution, in general, have not paid off in terms of productivity growth [18], a phenomenon that is commonly referred to as the <I>productivity puzzle</I>.  While phase one computers, designed to automate tasks requiring mathematical calculations have had impressive successes, phase two computers designed to augment human capabilities typically have shown disappointing results [11]. Productivity in firms using Computer-Aided Drafting (CAD) systems does not differ much from this general picture.  Firms that have used their system for one year report productivity increases of only 5% and typically do not report the maximum productivity growth until they have worked with CAD for five years [17].
<p>
The few laboratory and field studies on CAD usage that are available present a dismal picture.  Bietz et al. [3] found that mechanical engineering students who had passed a CAD course produce better and more complete drawings with less effort using paper and pencil than on a CAD system.  Luczak et al. [13] studied 43 subjects using 11 CAD systems in 11 factories.  They found that even when the subjects were highly trained, the high complexity of the commands (due to many input parameters, restrictions, and requirements) led to low performance, reduced creativity, frictions, and frustrations.  Finally, Majchrzak [15] found no improvement in the performance of 25 engineers and 60 drafters using CAD systems in comparison to non-CAD users.
<p>
In order to understand the problems faced by CAD users, we observed and recorded professional architects using a CAD system in their natural environment [4]. We begin by analyzing an example of suboptimal CAD usage from those real-world data in addition to another example from a study by Lang et al. [12]. These examples will demonstrate that the efficient use of CAD is dependent on the use of strategies that take advantage of CAD capabilities. To understand why experienced users do not have this strategic knowledge, we explore three approaches. First, we review some of the training literature and demonstrate that this strategic knowledge is not defined or taught explicitly. Second, we suggest that in the absence of these strategies, users develop an approach that is a mixture of manual and CAD methods resulting in suboptimal strategies. Third, we attempt to understand why experienced users do not themselves realize and change their suboptimal strategies. This is done by analyzing the relationship between drawing strategies and the quality of drawing produced for manual drafting as well as for CAD. We conclude with an attempt to define explicitly some of the strategies that would improve the use of CAD systems and discuss the ramifications for training and design.


<h2>ANATOMY OF THE SUBOPTIMAL STRATEGY</h2>
We shall describe two examples where users demonstrate suboptimal strategies while performing CAD tasks.

<h3>Example 1</h3>
One of the users in our study (referred to as B1) modified a design file from a marked-up hard copy. His task was to  draw fire protection enclosures around columns in a floor plan. The fire protections are polygons patterned with dots and triangles symbolizing concrete.
<p>
To construct the fire protection enclosures for the first column, B1 had to draw two identically patterned, L-shaped polygons. As shown in Figure 1a, he first drew the top shape (1), and then mirror-copied the shape to create the bottom shape (2). He then poched (patterned) each of the shapes (3). A more efficient way would have been to detail the first shape by drawing and patterning it, and then mirror-copying the patterned shape to create the second shape. This strategy would have saved him the extra operations for patterning Shape-2. 
<p>
<CENTER>
<IMG SRC="skb_fg1.gif" ALT="Figure 1">
<p>
Figure 1: Methods used by B1 to draw the fire protection.
</CENTER>
<HR>
<p>
In addition to the above strategy to complete the entire task, B1 also used a suboptimal method to complete the subtask of drawing the L-shaped polygon. To draw a closed shape that could be patterned, he used the method shown in Figure 1b which was very similar to a manual drafting technique. First he drew the top horizontal line (1), and then the left-most vertical line (2). Next he used the <tt>Copy Parallel</tt>  command to make copies of the two lines drawn, (3), and used the <tt>Modify to Intersection</tt> command to cleanup the intersection of the two lines (4). Finally, he drew one endcap of the shape (5) and used the <tt>Copy Parallel</tt> command to make a copy of the inner elbow of the shape to create the lower endcap of the shape (6). 
<p>
The above method to draw a shape with lines had two repercussions. First, as the automatic <tt>Pattern</tt> command is designed to pattern only closed shapes, he had to pattern each shape by copying individual dots and triangles from a nearby concrete shape. Second, when he decided to mirror-copy the shape, he had to temporarily group the individual line segments together using the <tt>Fence</tt> command before he could mirror-copy the shape. In the version of the CAD system used in our study, this procedure included several actions requiring the user to select individual pixels. This difficult perceptual/motor task was quite error-prone. Instead, if he had used the command <tt>Place Orthogonal Block</tt> to create the shape as a closed polygon, he could have used the automatic <tt>Pattern</tt> command as well as the regular <tt>Mirror Copy</tt>. These would have avoided the errorful steps of precise line drawing, manually patterning, and creating a fence to achieve the grouping.
<p>
It is pertinent to note that B1 had no difficulty in interacting with the commands he used. He rapidly executed commands like <tt>Mirror Copy</tt> and even more complex commands like <tt>Modify to Intersection</tt> with only minor motor slips. However, what B1 did not exhibit was a strategy to decompose the task so these very commands are used in a way to avoid unnecessary steps.

<h3>Example 2</h3>
Lang et al. [12] describes a similar suboptimal strategy used by an experienced CAD user. In their experiment, users were given the top and side view of a mechanical part drawn on paper. Their task was to construct three orthographic views and one isometric view of the part shown in Figure 2. According to the authors, the following four steps are  an efficient way to complete the task:
1. Draw the four circles representing the arcs and holes.
2. Draw lines connecting the outer arcs as well as the lines constituting part of the keyhole. 
3. Clean up the drawing by trimming lines that are not accurate or those used for construction. 
4. Group appropriate elements in the two dimensional drawing and project them into the third dimension. 

<p>
However, an experienced user in the experiment (referred to here as L1), executed the task differently from the efficient way described by the authors. L1 skipped step 3 and projected the two dimensional drawing before cleaning it up. Therefore, he had to clean up the drawing in two places. Similar to B1 in the previous example, L1 had little trouble using the commands. However, because the task was not decomposed into the proper subgoals, the resulting command sequence caused him to execute more steps than needed.
<p>
<CENTER>
<IMG SRC="skb_fg2.gif" ALT="Figure 2">
</CENTER>
<p>
Figure 2. Mechanical part drawn by the user described in example 2 (reconstructed from Figure 2 in [12]).
<HR>
<p>
<h3>Lack of an Efficient CAD Strategy</h3>

The above examples show the effects of not using efficient CAD strategies. In example 1, the step of copying a group of elements only after all the details are completed is an important strategy to take full advantage of the <tt>Mirror Copy</tt> command. In example 2, the step of projecting a group of elements only after all the details are finished is once again an important strategy to take full advantage of the <tt>Project</tt> command. Both examples demonstrate a strategy that requires the explicit sequence of first detailing all the parts, then aggregating those parts, followed by manipulating the aggregation. This strategy has no clear advantage in manual drafting as there is no way to produce elements automatically. However, this strategy is particularly useful in CAD as it can assist in reducing the number of steps to complete certain tasks.
Example 1 also demonstrates a suboptimal strategy that occurs at the lower level of drawing a shape. The example shows the effects of not using an efficient CAD strategy of using shapes to draw closed polygons. This "closed shape" strategy, of course, has no meaning for manual drafting. There is only one way to draw the shape - with individual lines. 
<p>
Although both the above users had many years of experience using CAD, they used suboptimal strategies to complete their tasks. To understand why these users did not demonstrate the use of efficient strategies, we investigated the nature of CAD knowledge and instruction provided in CAD manuals and books.

<h2>SEARCHING FOR EFFICIENT CAD STRATEGIES</h2>

To understand more clearly the levels of knowledge that were known and not known to users, we constructed a task decomposition of example 1 expressed as a GOMS model [7]. Figure 3a shows a partial task decomposition of B1 drawing the fire protection shapes.  When compared to the efficient way to accomplish the task (Figure 3b), we can see that B1 executed the <tt>Mirror Copy</tt> too early, and therefore had to pattern both the shapes. Additionally, he drew the shape with single lines and patterned each shape manually by copying dots and triangles. Therefore he used 4 cursor inputs just to place dots in the first shape. Instead, as shown in Figure 3b, if he had used a closed shape combined with the automatic pattern command, he would have to select the shape only once to pattern it automatically. As this patterned shape can be mirror-copied, it would have saved him the extra step of patterning both shapes.
<p>

<CENTER>
<IMG SRC="skb_fig3.gif" ALT="Figure 3">
<p>
Figure 3. Suboptimal and efficient decompositions of the fire protection task. Only the subtasks of patterning (poche) a shape have been decomposed upto the keystroke level.
</CENTER>
<HR>
<p>
Therefore, while B1 was proficient in executing the commands in the lower part of the task decomposition, he did not demonstrate knowledge of an efficient strategy at the higher level. We therefore investigated whether the higher level strategic knowledge was contained in vendor provided manuals and other sources.
<p>
We found that the highly competitive CAD industry had spawned an explosion of features in CAD systems resulting in systems with upto 2000 commands and a corresponding increase of instruction material. Manuals provided by the market leaders AutoCAD and Intergraph, focus on providing users with volumes of information about the numerous features available. The MicroStation user's guide, for example, begins with <I>MicroStation Fundamentals</I> which contains numerous exercises centered around commands like <tt>Save As</tt> and <tt>Draw Line</tt>. Although these descriptions are well presented, they are limited to the location of commands and the steps to use them.  In addition to vendor supplied manuals, commercially available supplementary volumes reveal a similar pattern. They include only details of specific commands without any higher level strategies.
<p>
In a library search of CAD books for architects, we found only two books that went beyond the description of commands. One of the books [16] states, "It might be necessary to discard some traditional drafting concepts as you learn the sophistication of AutoCAD" (pg. v). The other book by Crosley [10], describes the importance of "thinking CAD". He states, "It's possible to use computer-aided drawing without really taking advantage of its capabilities. Even some experienced CAD users have simply transferred all their manual-drawing habits over to the computer."  (pg. 6). Later he adds "Thus, the advantages of CAD are not free; they come at the expense of having to actually design the drawing" (pg. 11). While describing the Copy command he advises users to "never draw anything twice!" (pg. 41). 

<p>
While such advice goes a long way in stressing the importance of using commands like <tt>Copy</tt>, he does not discuss explicit strategies to "design the drawing". Therefore, because commands like <tt>Copy</tt> are learned without a specific strategy, their power remains unrealized. In a book on computer graphics programming, Mitchell et al. [14] liken the efficient use of CAD systems to programming where "you must think carefully about the structure of the drawing in terms of repetition, conditionals, the hierarchy of parts, and the use of transformations." (pg. 515). However, because this knowledge has never been made explicit in any of the sources described, users are left to infer or develop it during use.
<p>
Therefore, it appears, that the manuals and books concentrate on providing knowledge at the lower levels of the task decompositions as shown in Figure 3a. This is also the knowledge that is fairly well understood by experienced users. However, the knowledge that is not demonstrated is higher up in the task decomposition which is exactly the knowledge that is absent in the manuals and books we reviewed.
While the experienced users were quite proficient in using complex CAD commands like <tt>Modify to Intersection</tt> that were not present in manual drafting, it was not clear why the high level strategies like drawing a shape with single lines had such a remarkable resemblance to manual drafting. We therefore reviewed research in the area of knowledge acquisition and conceptual change to see if we could find an explanation.

<h2>MENTAL MODELS AND CONCEPTUAL CHANGE</h2>

Research on mental models describe a convincing picture of the stages that people go through while undergoing conceptual change in various domains. Clement [9], for example, describes many adults who have a naive view of mechanics that has a striking resemblance to pre-Newtonian physics. The process of knowledge acquisition can be seen as the restructuring of these models that are based on naive or prior knowledge, to fit new information. Vosniaou et al. [19] describe this change in terms of synthetic models that have to go through weak restructuring to make them consistent with new information. Occasionally, however, when these synthetic models are faced with major anomalies, they have to undergo a radical restructuring before they can fit with the real world conceptual model.
<p>
The theory of mental models and conceptual change can be used to explain what appears to be occurring in the learning and use of CAD systems [Jackobson, M., personal communication]. Based on the way CAD systems are described and designed, users might begin by forming a mental model of the CAD system as merely an electronic drafting tool requiring little change in the way drawing tasks are performed. Introductory descriptions often have statements like "CAD is an expansion of the way you draw" [16] (pg. v), and go on by describing the use of the commands like <tt>Draw Line</tt>. The model of an electronic drafting tool is further reinforced by having concepts such as "drawings" and "layers" that are directly connected to the real world concepts of drawing sheets and overlay drafting (the use of overlapping tracing sheets).  Following such introductions, the user is exposed to the details of using many different computer commands. The knowledge, as discussed earlier, is mainly about the location of these commands in deep hierarchical menus, and the procedure to execute them. 
<p>
Inundated with tool knowledge but without explicit strategies to decompose tasks to make use of those commands, the users simply adjust their initial drafting model to incorporate the new knowledge of the commands. However, as described in the examples, this superficial adjustment causes problems.  On the surface the use of <tt>Mirror Copy</tt> and <tt>Project</tt> appear to have been mastered as the users have no problem executing them.  Because the underlying conceptual model is still an electronic drafting tool rather than a CAD system requiring different strategies, the overall use of these commands is suboptimal.
<p>
Although the above explanation appears plausible, it cannot explain why CAD users do not discover the strategies over time and make a deeper conceptual change to their mental models. These users, performing complex drawing tasks for many years, have many opportunities for serendipitous discoveries of efficient strategies. Research in the stages of skill acquisition in many domains show people who have successfully reached a stage of strategic learning. Strategic learning is described as "the improvement that comes about because people learn the optimal way to organize their problem solving for a particular domain" [1] (pg. 257). Why have the CAD users that we observed not reached this level of learning? 
<p>
To understand why this change has not occurred, we contrasted the relationship between strategies and the quality of the product in manual as well as in CAD systems. We also explored the nature of the feedback loop for strategic knowledge in CAD systems.

<h2>THE RELATIONSHIP BETWEEN TECHNIQUE AND QUALITY</h2>

Manual drafting books have detailed descriptions of tools, techniques on how to use them, and simple rules to compose and perform a drawing task. Beakley et al., [2] (pg. 47), for example state that "When drawing, the lead should be pulled (not pushed) across the paper. To achieve this, tilt the lead holder in the direction of the hand movement when drawing a line. To reduce the frequency of sharpening standard size leads, slowly rotate the pencil as you draw a line". The book shows examples of 7 poorly drawn lines and their probable causes such as "pencil lifted too soon". In addition, techniques are provided to prevent lines from getting smudged and drawings getting dirty, for example, "... it is good practice always to begin work at the upper left corner of the sheet of drafting paper and to finish at the lower right corner of the sheet. Left-handed drafters may want to begin at the upper right corner of the sheet" (pg. 47). Still other techniques are provided to perform tasks requiring tool changes; "To avoid noticeably mismatched tangents, always draw circular segments first, then draw straight-line segments from the curved lines" [8] (pg. 19).
<p>
These procedures are designed explicitly to achieve drawing accuracy and quality. In most cases, if these procedures are not followed, it is very hard to produce a quality drawing; a wrong strategy invariably leads to a visibly low quality drawing. Because there is such a strong causal relationship between technique and quality, and because the flaws are publicly visible, drafters tend to be highly motivated to improve their technique.
This strong causal relationship between technique and drawing quality is absent in CAD. The drawing produced by B1 in example 1, is accurate and clean. This is easy to achieve as it requires only basic CAD knowledge to place accurate lines that meet at intersections. Therefore, there is no visible indication that the drawing was produced by a suboptimal strategy. As the flaws in the technique are not publicly visible, the users neither notice their suboptimal techniques, nor have motivation to change them. 
<p>
In cases when drawings are shared and manipulated within a group working on the same project, a poorly constructed CAD drawing can cause irritations and problems to other users. For example, a user might expect to move a shape by grabbing a side and realize it was constructed by single lines. In cases like this the drawing strategy becomes public. However, if all the users in a group share a common mental model of the CAD system, the suboptimal strategy can remain undetected. This is exactly the situation at the office where example 1 occurred.
<p>
The nature of the feedback could also explain why CAD users never reach the level of strategic learning. In the study by Lang et al. [12], we find two examples of the value of feedback. When L1, in example 2, attempted to draw a line connecting two arcs, he drew only one arc before he started to draw the connecting line. As the line needed to be connected to the second arc, he did not have a precise location to end it. Having failed to complete the task of drawing the line, he abandoned the line to draw the second arc, after which he redrew the line connecting both the arcs. Therefore, the failure to complete the task provided him feedback to change his strategy. Furthermore, to test if he could perform the task more efficiently, L1 was asked to discuss his strategy with another user who had used the more efficient strategy, and then redo the task. In his second attempt, L1 completed the task with the efficient strategy using many fewer steps. This demonstrated that remediation can help even an experienced user to realize and execute a better strategy. 
<p>
However, while feedback through failure can occur for some tasks, and remediation might occur through peer contact, in most real-world situations they do not occur.  In CAD, using a high level suboptimal strategy typically does not preclude the user from completing the task as there are many brute force ways to complete the task. Additionally, as observed in our site visit, while users frequently discuss design issues, they rarely discuss drawing strategies or look over each other's shoulders during the drawing process. Therefore, as feedback through failure and remediation rarely occur, CAD users may never reach a level of strategic learning even after many years of experience.

<h2>AN APPROACH TO CHANGE THE CONCEPTUAL MODEL OF CAD</h2>

Understanding the structure and causes of a problem usually suggest solutions. First, we have seen that although strategic knowledge in manual drafting has been made explicit in books, there has been no such attempts for CAD. Second, while the products of CAD usage are public, the process of producing them is mostly private. We therefore have begun to explore ideas to address both these issues.

<h3>Making CAD Strategies Explicit</h3>

Whether the ultimate goal is to provide better training, feedback, or motivation, the first step is to make efficient CAD strategies explicit. An efficient CAD strategy is one that decomposes a task in a way that makes efficient use of the tools available. Additionally, these strategies should be sufficiently abstract so that, once learned, they can be used in a variety of contexts. 
<p>
One way to identify efficient CAD strategies is to understand where CAD offers advantages over manual drafting. Figure 4 contrasts the task decomposition for manual drawing and CAD. The task is to draw three identical complex shapes consisting of lines and arcs. (We assume that the locations of these shapes have been determined through grids or construction lines).  Due to the inaccuracy of the compass in manual drafting, the arc must be drawn first. However, to minimize tool changes, all the arcs must be drawn together (1). Next, the vertical lines can be drawn moving the set square from left to right to avoid smudging the lines (2). Finally, the horizontal lines are drawn for all the shapes (3). Therefore, the efficient task decomposition is determined by the nature of the manual tools.
<p>
In CAD, as shown in Figure 4b, the efficient way to decompose the same task is different. Because CAD provides aggregation and manipulation commands, it is better to first draw all the lines of the shape (1 & 2), group them (3), and then make two copies (4). This strategy is what we call the Detail-Aggregate-Manipulate (DAM) strategy. The suboptimal strategies in example 1 and 2 described earlier, occurred because the detailing stage of the DAM strategy was not completed before starting the aggregation stage. B1 mirror-copied the shape before patterning it, and L1 projected the two dimensional drawing before cleaning up the lines. 
<p>
<CENTER>
<IMG SRC="skb_fig4.gif" ALT="Figure 4">
<p>
Figure 4. Comparing manual and CAD strategies
</CENTER>
<HR>
<p>
The contrast between the manual and CAD way to decompose the same task, as shown in Figure 4, suggests an important difference in the nature of assistance provide by the two media. While the manual drafting medium assists in the creation of geometry (lines, arcs etc.), it does not assist in exploiting the structure of a drawing (repetition, symmetry, projection, configuration). In contrast, the CAD medium, while supporting geometry creation, also provides assistance to exploit the structure of a drawing. However, this assistance can be beneficial only if a strategy such as DAM is used. The DAM strategy appears to be powerful as it has numerous applications, some of which are shown in Figure 5. Given the description of this strategy, one can begin to imagine other forms of suboptimal behavior. A user, for example, might detail the shape, ignore the aggregation stage, and proceed to copy the shape element by element.
<p>
<CENTER>
<IMG SRC="skb_fig5.gif" ALT="Figure 5">
<p>
Figure 5. Applications of the DAM strategy. Each row represents a type of structure found in drawings, with a single instance of a command sequence to exploit that structure.
</CENTER>
<HR>
<p>

CAD systems also provide powerful modification commands such as <tt>Add Vertex</tt> and <tt>Partial Delete</tt>. Such commands in combination with manipulation commands allow a user to exploit the occurrence of compositions that are similar in a drawing, a capability that is not supported in manual drafting. The CAD system can therefore assist the user to access and locate any part of a drawing (<tt>Pan, Zoom, Reference Files</tt>), aggregate elements that are similar to the task at hand (<tt>Fence, Graphic Group, Cells</tt>), manipulate the aggregation (<tt>Move, Copy, Rotate</tt>) and modify them (<tt>Scale, Partial Delete, Add Vertex</tt>) to create a similar but not identical result. This strategy can therefore be called Locate-Aggregate-Manipulate-Modify (LAMM) and can be applied in many different contexts. 
<p>

We suspect that there are efficient strategies at every level of CAD that need to be made explicit, from organizing a project to accurate cursor input. While strategies such as DAM and LAMM might appear obvious, the value of stating them explicitly cannot be ignored as even experienced users do not seem to be using them. However, it is yet an empirical question as to whether these strategies can be conveyed and learned by users through well-designed instructional aids. It appears that if these strategies and their applications are taught early during training, users can be encouraged to decompose drawings in terms of concepts like repetition and similarity.  Such concepts are not new to designers who use them constantly in their designs. However, for reasons we have offered, many users may not be using the CAD medium to exploit the very concepts that they use in design. In addition, if CAD users are introduced early on how to decompose a drawing task ("thinking CAD"), they might be motivated to search for and learn the commands that allow for actions like aggregation and manipulation. In fact it might be possible to reorganize the commands in an interface based on task goals such as symmetry and similarity. This might encourage users to  recognize and exploit the structure in a drawing.
<h3>Providing Feedback</h3>

Another approach that we are exploring is to provide computer based feedback to users when they use suboptimal strategies. We have prototyped a system called Active Assistance [4,5] that monitors various events while the system is being used, and provides unobtrusive assistance when appropriate. So, for example, the system might detect that a closed shape has been drawn with single enclosing elements and trigger the assistance. The assistance might replay the steps that a user executed to create the shape and present advantages of doing it another way. It is hoped that because the feedback is immediate and situated, the user will learn to look critically at their drawing process and motivate them to use better strategies. However, it remains to be seen if such a system would actually produce a change in the behavior of a user. Encouraging peer interaction and review might be equally powerful mechanisms.

<h2>CONCLUSION</h2>

We have attempted to explain why experienced CAD users not only use suboptimal strategies to complete drawing tasks, but also continue to do so even after many years of CAD usage. This, we believe, has three causes. First, the strategic knowledge to use a CAD system efficiently has never been made explicit, and therefore never taught. Second, as there are few mechanisms that provide feedback about suboptimal usage, users frequently may not be aware of their suboptimal usage. Third, as users can most often produce clean accurate drawings however suboptimal their strategies, there is little motivation to look critically at their drawing process.
<p>
In an attempt to reverse this situation, we showed two examples of how CAD strategies can be abstracted and explicitly stated. Such strategies could be used to design various forms of instruction as well as to redesign the interface. We also briefly described an approach to provide unobtrusive feedback to users if they performed tasks using suboptimal strategies. 
<p>
One of the most common and favorite explanations for the low productivity in CAD systems is that the "D" in CAD does not stand for Design. Many claim that architects design, not just draw and therefore CAD systems as they stand today should be abandoned and approached differently. We believe this line of argument misses the point. Whatever the original acronym meant, CAD systems were designed to assist in drawing and not in design. While new paradigms for design assistance have to emerge and prove themselves, there are lessons to be learned from the CAD productivity problem. 
The CAD productivity problem, as we have demonstrated, has to do with deeper mechanisms that can plague the proper use of any new technology or medium. If the CAD productivity phenomena is ignored or explained away by the nature of what CAD systems do, then we are doomed to repeat their mistakes. If, on the other hand, we understand that a new technology often requires reformulating old tasks, then we can spend more time in making that knowledge explicit and minimally disruptive. Bowen [6] studying the <I>productivity puzzle</I> states: "The large payoffs come not from increasing the efficiency with which people perform their old jobs, but from changing the way work is done". However, it appears, that the knowledge to make this change is often not as obvious to users as we might assume and while serendipitous discoveries by users are possible, it is not something we should depend upon. 

<h2>ACKNOWLEDGMENTS</h2>

This research was supported in part by the U. S. Army Corps of Engineers Construction Engineering Research Laboratory  (USA-CERL) Contract# DACA88-94-K-0006 and by the National Science Foundation, Award# IRI-9457628. The views and conclusions contained in this document are those of the authors and should not be interpreted as representing the official policies, either expressed or implied, of USA-CERL, NSF, or the U. S. Government. The authors acknowledge the contributions of O. Akin, U. Flemming, J. Garrett, D. Shaw; and Bentley Systems for the academic edition of MicroStation.

<h2>REFERENCES</h2>
<ol>
<li>
Anderson, J.R. <em>Cognitive Psychology and its Implications.</em> W.H.Freeman and Company, New York, 1990.
<li>
Beakley, G.C., Autore, D.D., and Patterson, T.L. <em>Architectural Drawing and Design</em>. Macmillan Publishing Company, New York, 1984.
<li>
Bietz, W., Langner, T., Luczak, H., Muller, T. and Springer, J.  Evaluation of a compact CAD-course in laboratory experiments, <em>International Journal of Human Computer Interaction</em>, (1990):  2, 2,  111-135.
<li>
Bhavnani, S.K., Flemming, U., Forsythe, D.E., Garrett, J.H., Shaw, D.S., and Tsai, A. CAD Usage in an Architectural Office: From Observation to Active Assistance, <em>Automation in Construction</em> (in press).
<li>
Bhavnani, S.K., Garrett, J.H., Flemming, U., and Shaw, D.S. Towards Active Assistance. <em>Bridging the Generations-Proceedings of the International Workshop on the Future Directions of Computer-Aided Engineering</em>, D. Rehak, (Ed.), (1994)  1183-1188. Carnegie Mellon University, Pittsburgh, PA.
<li>
Bowen W. The Puny Payoff from Office Computers. In T. Forester, (Ed.), <em>Computers in the Human Context</em>, Basil Blackwell, New York,  1989.
<li>
Card, S.K., Moran, T.P., and Newell, A. <em>The Psychology of Human-Computer Interaction</em>. Hillsdale, NJ: Lawrence Erlbaum Associates, 1983.
<li>
Ching, F. <em>Architectural Graphics</em>. Van Nostrand Reinhold Company, New York, 1975.
<li>
Clement, J.  A Conceptual Model Discussed by Galileo and Used Intuitively by Physics Students. In Gentner D., and Stevens D (Eds.), <em>Mental Models</em>. Lawrence Erlbaum Associates, Publishers, Hillsdale, 1983.
<li>
Crosley, L.M. <em>The Architect's Guide to Computer-Aided Design</em>. John Wiley and Sons, New York, 1988.
<li>
Landauer, T. K. <em>The trouble with computers: Usefulness, usability, and productivity</em>. 1995 Cambridge, Mass: MIT Press.
<li>
Lang, G.T., Eberts, R. E., Gabel, M. G., and Barash, M.M. Extracting and Using Procedural Knowledge in a CAD Task. <em>IEEE Transactions on Engineering Management</em>, (1991) 38,  257-68.
<li>
Luczak, H., Beitz, W., Springer, J. and Langner, T.  Frictions and frustrations in creative-informatory work with computer aided design-CAD-systems. <em>Proceedings of the Fourth International Conference on Human-Computer Interaction</em>, (1991),  175-9.
<li>
Mitchell, W.J., Liggett, R.S., and Kevan, T. <em>The Art of Computer Graphics Programming</em>. Van Nostrand Reinhold Company, New York, 1987.
<li>
Majchrzak, A. Effect of CAD on the jobs of drafters and engineers: a quantitative case study, <em>International Journal of Man-Machine Studies</em>, (1990):  32, 3, 245-62.
<li>
Obermeyer, T.L. <em>AutoCAD Architectural Lab Manual</em>. McGraw-Hill Book Company, 1987.
<li>
PSMJ <em>CADD application and user survey</em> (Professional Services Management Journal, 1994).
<li>
Strassmann, P.A. <em>The Business Value of Computers</em>.  The Information Economics Press New Canaan, CT, 1990.
<li>
Vosniadou, S., and Brewer, W.F.  Mental Models of Earth: A Study of Conceptual Change in Childhood. <em>Cognitive Psychology</em>,  (1992), 24,  535-538.
</ol>

</body>
</html>
